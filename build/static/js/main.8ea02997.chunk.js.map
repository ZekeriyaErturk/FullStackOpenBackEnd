{"version":3,"sources":["Components/Filter.js","Components/PersonForm.js","Components/Person.js","Components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","onChange","value","PersonForm","name","nameHandler","number","numberHandler","handleClick","onClick","type","Person","filtered","deletePerson","map","person","key","Notification","props","message","length","className","status","baseUrl","axios","get","newPerson","post","id","delete","updatedPerson","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","setMessage","useEffect","personService","then","response","data","toLowerCase","includes","e","target","index","Infinity","preventDefault","i","window","confirm","setTimeout","catch","err","res","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ea02997.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Filter({ onChange, value }) {\r\n  return (\r\n    <div>\r\n      filter shown with <input value={value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nfunction PersonForm({ name, nameHandler, number, numberHandler, handleClick }) {\r\n  return (\r\n    <form>\r\n      <div>\r\n        name: <input value={name} onChange={nameHandler} />\r\n      </div>\r\n      <div>\r\n        number: <input value={number} onChange={numberHandler} />\r\n      </div>\r\n      <div>\r\n        <button onClick={handleClick} type=\"submit\">\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Person = ({ filtered, deletePerson }) => {\r\n  return (\r\n    <div>\r\n      {filtered.map((person) => (\r\n        <p key={person.name}>\r\n          {person.name} {person.number}{\" \"}\r\n          <button onClick={() => deletePerson(person)}>delete</button>\r\n        </p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Person;\r\n","import React from \"react\";\r\n\r\nconst Notification = (props) => {\r\n  if (props.message.length === 0) return null;\r\n  return (\r\n    <div className={props.message[0].status}>{props.message[0].message}</div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl);\r\n};\r\n\r\nconst createPerson = (newPerson) => {\r\n  return axios.post(baseUrl, newPerson);\r\n};\r\n\r\nconst updatePerson = (updatedPerson) => {\r\n  return axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson);\r\n};\r\n\r\nconst deletePerson = (id) => {\r\n  return axios.delete(`${baseUrl}/${id}`);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  createPerson,\r\n  deletePerson,\r\n  updatePerson,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport Filter from \"./Components/Filter\";\nimport PersonForm from \"./Components/PersonForm\";\nimport Person from \"./Components/Person\";\nimport Notification from \"./Components/Notification\";\nimport personService from \"./services/persons\";\n\nfunction App() {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [message, setMessage] = useState([]);\n\n  useEffect(() => {\n    personService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  // Add Person And Updateperson\n  const handleAdd = (e) => {\n    let index = -Infinity;\n    e.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n\n    for (let i = 0; i < persons.length; i++) {\n      if (persons[i].name === newName && persons.number !== newNumber) {\n        index = i;\n      }\n    }\n\n    if (index !== -Infinity) {\n      const check = window.confirm(\n        `${persons[index].name} is already added to phonebook replace the old number with new one?`\n      );\n      if (check) {\n        personService\n          .updatePerson({ ...persons[index], number: newNumber })\n          .then((response) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== response.data.id ? person : response.data\n              )\n            );\n\n            setMessage([\n              { message: `Updated ${persons[index].name}`, status: \"success\" },\n            ]);\n            setTimeout(() => setMessage(\"\"), 2000);\n          })\n          .catch((err) => {\n            setMessage([\n              {\n                message: `Information of ${persons[index].name} has already been removed from server`,\n                status: \"error\",\n              },\n            ]);\n            setTimeout(() => setMessage(\"\"), 2000);\n          });\n      }\n    } else {\n      personService.createPerson(newPerson).then((response) => {\n        setPersons([...persons, response.data]);\n        setMessage([{ message: `Added ${newPerson.name}`, status: \"success\" }]);\n        setTimeout(() => setMessage(\"\"), 2000);\n      });\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  // Delete Person\n  const handleDelete = (person) => {\n    const result = window.confirm(`Delete ${person.name}`);\n\n    if (result) {\n      personService.deletePerson(person.id).then((res) => {\n        setPersons(persons.filter((p) => p.id !== person.id));\n        setMessage([{ message: `Deleted ${person.name}`, status: \"success\" }]);\n        setTimeout(() => setMessage(\"\"), 2000);\n      });\n    }\n  };\n\n  // Form handlers\n  const handleName = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const handleNumber = (e) => {\n    setNewNumber(e.target.value);\n  };\n\n  const handleSearch = (e) => {\n    setFilter(e.target.value);\n  };\n\n  // Search phonebook\n  const filtered = persons.filter(\n    (persons) =>\n      persons.name.toLowerCase().includes(filter.toLowerCase()) ||\n      persons.number.includes(filter)\n  );\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} />\n      <Filter onChange={handleSearch} value={filter} />\n      <h2>add a new</h2>\n      <PersonForm\n        name={newName}\n        nameHandler={handleName}\n        number={newNumber}\n        numberHandler={handleNumber}\n        handleClick={handleAdd}\n      />\n      <h2>Numbers</h2>\n      <Person filtered={filtered} deletePerson={handleDelete} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}